{"version":3,"sources":["webpack:///./src/templates/templates.style.tsx","webpack:///./src/templates/blog-list.tsx","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/components/Pagination/pagination.style.tsx","webpack:///./src/components/Pagination/pagination.tsx","webpack:///./src/components/PostCard/postCard.style.tsx","webpack:///./src/components/PostCard/postCard.tsx"],"names":["BlogPostsWrapper","styled","div","RelatedPostWrapper","RelatedPostTitle","h2","themeGet","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","h1","BlogPostFooter","PostShare","BlogPostDetailsWrapper","PostTags","BlogList","props","Posts","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","title","map","node","key","fields","slug","frontmatter","image","cover","childImageSharp","fluid","url","description","excerpt","date","tags","prevLink","nextLink","totalPage","pageQuery","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports","PaginationWrapper","PrevPage","NextPage","PageNumber","Pagination","className","to","aria-label","PostCardWrapper","PostPreview","PostDetails","PostDate","PostContent","PostTitle","Excerpt","p","PostCard","imageType","addAllClasses","push","join","alt","fixed","dangerouslySetInnerHTML","__html","tag","defaultProps"],"mappings":"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","file":"component---src-templates-blog-list-tsx-392aa01c962006d452d7.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { themeGet } from \"styled-system\"\r\n\r\nexport const BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  position: relative;\r\n\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 90px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const RelatedPostWrapper = styled.div`\r\n  margin: 0 auto;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const RelatedPostTitle = styled.h2`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 68px;\r\n    height: 1px;\r\n    background: #292929;\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nexport const RelatedPostItems = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -15px;\r\n`\r\n\r\nexport const RelatedPostItem = styled.div`\r\n  flex: 0 0 33.333333333%;\r\n  max-width: 33.333333333%;\r\n  padding: 0 15px;\r\n  @media (max-width: 575px) {\r\n    flex: 0 0 100%;\r\n    max-width: 100%;\r\n    &:nth-child(n + 2) {\r\n      margin-top: 50px;\r\n    }\r\n  }\r\n  .post_card {\r\n    &:hover {\r\n      .post_preview {\r\n        a {\r\n          transform: scale(1.05);\r\n        }\r\n      }\r\n    }\r\n\r\n    .post_preview {\r\n      margin-bottom: 16px;\r\n      overflow: hidden;\r\n      a {\r\n        display: block;\r\n        transition: 0.25s ease-in-out;\r\n      }\r\n      &:before {\r\n        filter: blur(10px);\r\n      }\r\n    }\r\n    .post_title {\r\n      font-size: 21px;\r\n      a {\r\n        display: block;\r\n        white-space: nowrap;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n\r\n      @media (max-width: 1400px) {\r\n        font-size: 19px;\r\n      }\r\n      @media (max-width: 1200px) {\r\n        font-size: 17px;\r\n      }\r\n      @media (max-width: 990px) {\r\n        font-size: 15px;\r\n      }\r\n    }\r\n    .post_content {\r\n      max-width: 100%;\r\n    }\r\n\r\n    .post_tags {\r\n      margin-top: 20px;\r\n      a {\r\n        @media (max-width: 990px) {\r\n          font-size: 12px;\r\n          margin-right: 15px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const TagPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  position: relative;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 30px 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 80px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n`\r\nexport const TagPageHeading = styled.div`\r\n  padding-left: 210px;\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  margin-bottom: 120px;\r\n  position: relative;\r\n  @media (max-width: 1200px) {\r\n    padding-left: 160px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding-left: 0;\r\n    font-size: 13px;\r\n    margin-bottom: 80px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 90px;\r\n    height: 1px;\r\n    background: #292929;\r\n    margin-top: 15px;\r\n  }\r\n`\r\n\r\nexport const TagName = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: ${themeGet(\"colors.primary\", \"#1D95D1\")};\r\n  margin-bottom: 8px;\r\n  @media (max-width: 990px) {\r\n    font-size: 26px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 22px;\r\n  }\r\n`\r\nexport const BlogPostFooter = styled.div`\r\n  margin: 0 auto;\r\n  width: 870px;\r\n  max-width: 100%;\r\n  padding-top: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  @media (max-width: 990px) {\r\n    padding-top: 40px;\r\n  }\r\n`\r\n\r\nexport const PostShare = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > span {\r\n    flex-shrink: 0;\r\n  }\r\n  > div,\r\n  .SocialMediaShareButton {\r\n    cursor: pointer;\r\n    margin-left: 25px;\r\n    font-size: 22px;\r\n    outline: 0;\r\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n    transition: 0.15s ease-in-out;\r\n    @media (max-width: 767px) {\r\n      font-size: 18px;\r\n      margin-left: 20px;\r\n    }\r\n    &:hover {\r\n      color: ${themeGet(\"colors.primary\", \"#1D95D1\")};\r\n    }\r\n    svg {\r\n      display: block;\r\n    }\r\n  }\r\n`\r\nexport const BlogPostDetailsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding: 90px 0 120px 0;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet(\"primary\", \"#1D95D1\")};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport PostCard from \"../components/PostCard/postCard\"\r\nimport Pagination from \"../components/Pagination/pagination\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { BlogPostsWrapper } from \"./templates.style\"\r\n\r\nconst BlogList = (props: any) => {\r\n  const { data } = props\r\n  const Posts = data.allMarkdownRemark.edges\r\n  const { currentPage, numPages } = props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage =\r\n    currentPage - 1 === 1 ? \"/page/1\" : `/page/${(currentPage - 1).toString()}`\r\n  const nextPage = `/page/${(currentPage + 1).toString()}`\r\n  const PrevLink = !isFirst && prevPage\r\n  const NextLink = !isLast && nextPage\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`Page ${currentPage}`} />\r\n\r\n      <BlogPostsWrapper>\r\n        {Posts.map(({ node }: any) => {\r\n          return (\r\n            <PostCard\r\n              key={node.fields.slug}\r\n              title={node.frontmatter.title || node.fields.slug}\r\n              image={\r\n                node.frontmatter.cover == null\r\n                  ? null\r\n                  : node.frontmatter.cover.childImageSharp.fluid\r\n              }\r\n              url={node.fields.slug}\r\n              description={node.frontmatter.description || node.excerpt}\r\n              date={node.frontmatter.date}\r\n              tags={node.frontmatter.tags}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Pagination\r\n          prevLink={PrevLink}\r\n          nextLink={NextLink}\r\n          currentPage={`${currentPage}`}\r\n          totalPage={`${numPages}`}\r\n        />\r\n      </BlogPostsWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogList\r\n\r\nexport const pageQuery = graphql`\r\n  query($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    sitePage {\r\n      path\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 300)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\r\n            title\r\n            description\r\n            tags\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1170, quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","var createCompounder = require('./_createCompounder');\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\n\n\nvar kebabCase = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\nmodule.exports = kebabCase;","import styled from 'styled-components';\r\nimport { themeGet } from 'styled-system';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PrevPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#1D95D1')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NextPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#1D95D1')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageNumber = styled.div``;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\r\nimport {\r\n  PaginationWrapper,\r\n  PrevPage,\r\n  NextPage,\r\n  PageNumber,\r\n} from './pagination.style';\r\n\r\ntype PaginationProps = {\r\n  prevLink?: string | undefined | null | boolean;\r\n  nextLink?: string | undefined | null | boolean;\r\n  currentPage: string;\r\n  totalPage: string;\r\n  className?: string;\r\n};\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\r\n  prevLink,\r\n  nextLink,\r\n  currentPage,\r\n  totalPage,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PaginationWrapper {...props} className={className}>\r\n      <PrevPage>\r\n        {prevLink && (\r\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\r\n            <IoMdArrowRoundBack />\r\n          </Link>\r\n        )}\r\n      </PrevPage>\r\n\r\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\r\n\r\n      <NextPage>\r\n        {nextLink && (\r\n          <Link to={`${nextLink}`} aria-label=\"Next\">\r\n            <IoMdArrowRoundForward />\r\n          </Link>\r\n        )}\r\n      </NextPage>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from 'styled-components';\r\nimport { themeGet } from 'styled-system';\r\n\r\nexport const PostCardWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const PostPreview = styled.div`\r\n  margin-bottom: 45px;\r\n  position: relative;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 80%;\r\n    height: 80%;\r\n    background-color: #757575;\r\n    bottom: 0;\r\n    left: 10%;\r\n    filter: blur(15px);\r\n  }\r\n`;\r\n\r\nexport const PostDetails = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const PostDate = styled.div`\r\n  font-size: 90px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  padding: 30px 35px 15px 35px;\r\n  margin-right: 20px;\r\n  line-height: 1;\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  @media (max-width: 1200px) {\r\n    font-size: 70px;\r\n    padding: 25px 25px 15px 25px;\r\n    margin-right: 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 56px;\r\n    padding: 20px 20px 15px 20px;\r\n    margin-right: 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    display: block;\r\n    margin-top: 12px;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const PostContent = styled.div`\r\n  align-self: center;\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  line-height: 1.53;\r\n  margin-bottom: 10px;\r\n  a {\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 26px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 21px;\r\n    margin-bottom: 12px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 20px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet('fontSizes.3', '15')}px;\r\n  color: ${themeGet('textColor', '#292929')};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 0;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet('primary', '#1D95D1')};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport _ from \"lodash\"\r\nimport Img from \"gatsby-image\"\r\nimport {\r\n  PostCardWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostTitle,\r\n  Excerpt,\r\n  PostContent,\r\n  PostTags,\r\n} from \"./postCard.style\"\r\n\r\ninterface PostCardProps {\r\n  image?: any\r\n  title: string\r\n  description?: string\r\n  url: string\r\n  date?: string\r\n  tags?: []\r\n  className?: string\r\n  imageType?: \"fixed\" | \"fluid\"\r\n}\r\n\r\nconst PostCard: React.FunctionComponent<PostCardProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  date,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = [\"post_card\"]\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className)\r\n  }\r\n\r\n  return (\r\n    <PostCardWrapper className={addAllClasses.join(\" \")} {...props}>\r\n      {image == null ? null : (\r\n        <PostPreview className=\"post_preview\">\r\n          <Link to={url}>\r\n            {imageType === \"fluid\" ? (\r\n              <Img fluid={image} alt=\"post preview\" />\r\n            ) : (\r\n              <Img fixed={image} alt=\"post preview\" />\r\n            )}\r\n          </Link>\r\n        </PostPreview>\r\n      )}\r\n\r\n      <PostDetails className=\"post_details\">\r\n        {date && (\r\n          <PostDate\r\n            dangerouslySetInnerHTML={{\r\n              __html: date,\r\n            }}\r\n            className=\"post_date\"\r\n          />\r\n        )}\r\n\r\n        <PostContent className=\"post_content\">\r\n          <PostTitle className=\"post_title\">\r\n            <Link to={url}>{title}</Link>\r\n          </PostTitle>\r\n          {description && (\r\n            <Excerpt\r\n              dangerouslySetInnerHTML={{\r\n                __html: description,\r\n              }}\r\n              className=\"excerpt\"\r\n            />\r\n          )}\r\n\r\n          {tags == null ? null : (\r\n            <PostTags className=\"post_tags\">\r\n              {tags.map((tag: string, index: number) => (\r\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                  {`#${tag}`}\r\n                </Link>\r\n              ))}\r\n            </PostTags>\r\n          )}\r\n        </PostContent>\r\n      </PostDetails>\r\n    </PostCardWrapper>\r\n  )\r\n}\r\n\r\nPostCard.defaultProps = {\r\n  imageType: \"fluid\",\r\n}\r\n\r\nexport default PostCard\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/Pagination/pagination.style.tsx","webpack:///./src/components/Pagination/pagination.tsx","webpack:///./src/templates/blog-list.tsx"],"names":["PaginationWrapper","styled","div","PrevPage","themeGet","NextPage","PageNumber","Pagination","prevLink","nextLink","currentPage","totalPage","className","props","to","aria-label","pageQuery","BlogList","Posts","data","allMarkdownRemark","edges","pageContext","numPages","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","title","map","node","key","fields","slug","frontmatter","image","cover","childImageSharp","fluid","url","description","excerpt","date","tags"],"mappings":"uRAGaA,EAAoBC,IAAOC,IAAV,yFAAGD,CAAH,qFAMjBE,EAAWF,IAAOC,IAAV,gFAAGD,CAAH,6YAKRG,YAAS,mBAAoB,WAahBA,YAAS,iBAAkB,YAKxCC,EAAWJ,IAAOC,IAAV,gFAAGD,CAAH,6YAKRG,YAAS,mBAAoB,WAahBA,YAAS,iBAAkB,YAKxCE,EAAaL,IAAOC,IAAV,kFAAGD,CAAH,MCrCvB,IA+BeM,EA/B8C,SAAC,GAOxD,IANJC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACGC,E,oIACC,kEACJ,OACE,gBAACb,EAAD,iBAAuBa,EAAvB,CAA8BD,UAAWA,IACvC,gBAACT,EAAD,KACGK,GACC,gBAAC,OAAD,CAAMM,GAAE,GAAKN,EAAYO,aAAW,QAClC,gBAAC,IAAD,QAKN,gBAACT,EAAD,aAAqBI,EAArB,OAAuCC,GAEvC,gBAACN,EAAD,KACGI,GACC,gBAAC,OAAD,CAAMK,GAAE,GAAKL,EAAYM,aAAW,QAClC,gBAAC,IAAD,U,oCCeCC,GAFEC,UA9CE,SAACJ,GAAe,IAEzBK,EADSL,EAARM,KACYC,kBAAkBC,MAFN,EAGCR,EAAMS,YAA/BZ,EAHwB,EAGxBA,YAAaa,EAHW,EAGXA,SACdC,EAA0B,IAAhBd,EACVe,EAASf,IAAgBa,EACzBG,EACJhB,EAAc,GAAM,EAAI,UAAxB,UAA8CA,EAAc,GAAGiB,WAC3DC,EAAW,UAAUlB,EAAc,GAAGiB,WACtCE,GAAYL,GAAWE,EACvBI,GAAYL,GAAUG,EAE5B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKG,MAAK,QAAUrB,IAEpB,gBAAC,IAAD,KACGQ,EAAMc,KAAI,YAAiB,IAAfC,EAAe,EAAfA,KACX,OACE,gBAAC,IAAD,CACEC,IAAKD,EAAKE,OAAOC,KACjBL,MAAOE,EAAKI,YAAYN,OAASE,EAAKE,OAAOC,KAC7CE,MAC4B,MAA1BL,EAAKI,YAAYE,MACb,KACAN,EAAKI,YAAYE,MAAMC,gBAAgBC,MAE7CC,IAAKT,EAAKE,OAAOC,KACjBO,YAAaV,EAAKI,YAAYM,aAAeV,EAAKW,QAClDC,KAAMZ,EAAKI,YAAYQ,KACvBC,KAAMb,EAAKI,YAAYS,UAK7B,gBAAC,EAAD,CACEtC,SAAUqB,EACVpB,SAAUqB,EACVpB,YAAW,GAAKA,EAChBC,UAAS,GAAKY,OASC","file":"component---src-templates-blog-list-tsx-79258e65d9cc2a616168.js","sourcesContent":["import styled from 'styled-components';\r\nimport {themeGet} from 'styled-system';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PrevPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#1D95D1')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NextPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#1D95D1')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageNumber = styled.div``;\r\n","import * as React from 'react';\r\nimport {Link} from 'gatsby';\r\nimport {IoMdArrowRoundBack, IoMdArrowRoundForward} from 'react-icons/io';\r\nimport {\r\n  PaginationWrapper,\r\n  PrevPage,\r\n  NextPage,\r\n  PageNumber,\r\n} from './pagination.style';\r\n\r\ntype PaginationProps = {\r\n  prevLink?: string | undefined | null | boolean;\r\n  nextLink?: string | undefined | null | boolean;\r\n  currentPage: string;\r\n  totalPage: string;\r\n  className?: string;\r\n};\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\r\n  prevLink,\r\n  nextLink,\r\n  currentPage,\r\n  totalPage,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PaginationWrapper {...props} className={className}>\r\n      <PrevPage>\r\n        {prevLink && (\r\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\r\n            <IoMdArrowRoundBack />\r\n          </Link>\r\n        )}\r\n      </PrevPage>\r\n\r\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\r\n\r\n      <NextPage>\r\n        {nextLink && (\r\n          <Link to={`${nextLink}`} aria-label=\"Next\">\r\n            <IoMdArrowRoundForward />\r\n          </Link>\r\n        )}\r\n      </NextPage>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import * as React from 'react';\r\nimport {graphql} from 'gatsby';\r\nimport PostCard from '../components/PostCard/postCard';\r\nimport Pagination from '../components/Pagination/pagination';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport {BlogPostsWrapper} from './templates.style';\r\n\r\nconst BlogList = (props: any) => {\r\n  const {data} = props;\r\n  const Posts = data.allMarkdownRemark.edges;\r\n  const {currentPage, numPages} = props.pageContext;\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage =\r\n    currentPage - 1 === 1 ? '/page/1' : `/page/${(currentPage - 1).toString()}`;\r\n  const nextPage = `/page/${(currentPage + 1).toString()}`;\r\n  const PrevLink = !isFirst && prevPage;\r\n  const NextLink = !isLast && nextPage;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`Page ${currentPage}`} />\r\n\r\n      <BlogPostsWrapper>\r\n        {Posts.map(({node}: any) => {\r\n          return (\r\n            <PostCard\r\n              key={node.fields.slug}\r\n              title={node.frontmatter.title || node.fields.slug}\r\n              image={\r\n                node.frontmatter.cover == null\r\n                  ? null\r\n                  : node.frontmatter.cover.childImageSharp.fluid\r\n              }\r\n              url={node.fields.slug}\r\n              description={node.frontmatter.description || node.excerpt}\r\n              date={node.frontmatter.date}\r\n              tags={node.frontmatter.tags}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <Pagination\r\n          prevLink={PrevLink}\r\n          nextLink={NextLink}\r\n          currentPage={`${currentPage}`}\r\n          totalPage={`${numPages}`}\r\n        />\r\n      </BlogPostsWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n\r\nexport const pageQuery = graphql`\r\n  query($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    sitePage {\r\n      path\r\n    }\r\n    allMarkdownRemark(\r\n      sort: {fields: [frontmatter___date], order: DESC}\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 300)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\r\n            title\r\n            description\r\n            tags\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1170, quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}